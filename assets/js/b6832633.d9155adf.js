"use strict";(self.webpackChunkBOB_docs=self.webpackChunkBOB_docs||[]).push([[4378],{1509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>b,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=n(4848),s=n(8453),r=n(1470),i=n(9365);const o={sidebar_position:1},l="BOB Gateway",c={id:"build/bob-sdk/gateway",title:"BOB Gateway",description:"Overview",source:"@site/docs/build/bob-sdk/gateway.md",sourceDirName:"build/bob-sdk",slug:"/build/bob-sdk/gateway",permalink:"/docs/build/bob-sdk/gateway",draft:!1,unlisted:!1,editUrl:"https://github.com/bob-collective/bob/tree/master/docs/docs/build/bob-sdk/gateway.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Local Development",permalink:"/docs/build/getting-started/local-development"},next:{title:"BOB Bitcoin MetaMask Snap",permalink:"/docs/build/bob-sdk/metamask-snap"}},d={},u=[{value:"Overview",id:"overview",level:2},{value:"How Gateway Works",id:"how-gateway-works",level:2},{value:"Step-by-Step Integration Guide",id:"step-by-step-integration-guide",level:2},{value:"Install the BOB SDK",id:"install-the-bob-sdk",level:3},{value:"Initialize the API Client",id:"initialize-the-api-client",level:3},{value:"Get Available Tokens",id:"get-available-tokens",level:3},{value:"Get a Quote",id:"get-a-quote",level:3},{value:"Get available staking or lending contracts",id:"get-available-staking-or-lending-contracts",level:4},{value:"Start the Order",id:"start-the-order",level:3},{value:"Sign the Bitcoin Transaction",id:"sign-the-bitcoin-transaction",level:3},{value:"Finalize the Order",id:"finalize-the-order",level:3},{value:"Monitor the User&#39;s Orders",id:"monitor-the-users-orders",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Security and Trust Assumptions",id:"security-and-trust-assumptions",level:2},{value:"Code References",id:"code-references",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"bob-gateway",children:"BOB Gateway"})}),"\n",(0,a.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://docs.gobob.xyz/docs/learn/guides/bitcoin-bridge/",children:"BOB Gateway"})," is a Bitcoin intent bridge that unlocks Bitcoin liquidity by reducing the number of steps to onboard users, saving time and money. Users can go from ",(0,a.jsx)(t.strong,{children:"BTC"})," on Bitcoin to ",(0,a.jsx)(t.strong,{children:"staked BTC LSTs"})," with a single Bitcoin transaction."]}),"\n",(0,a.jsx)(t.p,{children:"Our SDK makes it possible for you to bring this UX directly into your app."}),"\n",(0,a.jsx)(t.h2,{id:"how-gateway-works",children:"How Gateway Works"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Liquidity providers (LPs) temporarily lock wrapped Bitcoin (WBTC or tBTC) in escrow smart contracts on BOB."}),"\n",(0,a.jsx)(t.li,{children:"A user makes a request for wrapped or staked Bitcoin (e.g. WBTC, tBTC, or a Bitcoin LST/LRT)."}),"\n",(0,a.jsxs)(t.li,{children:["The user sends BTC to the liquidity provider's Bitcoin address. A hash of the user's order is included in the ",(0,a.jsx)(t.code,{children:"OP_RETURN"})," of the transaction."]}),"\n",(0,a.jsxs)(t.li,{children:["Gateway finalizes the transaction. After trustlessly verifying the user's Bitcoin transaction with an on-chain ",(0,a.jsx)(t.a,{href:"/docs/build/examples/btc-swap/",children:"Light Client"}),", Gateway sends the LP's wrapped Bitcoin to the user's EVM address. If the user requested a Bitcoin LST/LRT, that token is minted using the LP's wrapped Bitcoin before it is sent to the user."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This SDK makes it possible to do steps 2, 3, and 4 in your application's front end."}),"\n",(0,a.jsx)(t.h2,{id:"step-by-step-integration-guide",children:"Step-by-Step Integration Guide"}),"\n",(0,a.jsxs)(t.p,{children:["This is an example implementation of our SDK. You will need to decide how you handle asking your user to sign a partially-signed Bitcoin transaction (PSBT). We recommend using our ",(0,a.jsx)(t.a,{href:"/docs/build/bob-sdk/sats-wagmi",children:"sats-wagmi"})," package to connect to your users' wallets."]}),"\n",(0,a.jsx)(t.admonition,{title:"Staking only on testnet",type:"warning",children:(0,a.jsx)(t.p,{children:"BOB Gateway's newest functionality (i.e. staking for LSTs) is only available on testnet. We will update this page once mainnet is upgraded."})}),"\n",(0,a.jsx)(t.h3,{id:"install-the-bob-sdk",children:"Install the BOB SDK"}),"\n",(0,a.jsxs)(t.p,{children:["Add ",(0,a.jsx)(t.code,{children:"@gobob/bob-sdk"})," to your project using your preferred package manager."]}),"\n",(0,a.jsxs)(r.A,{groupId:"npm2yarn",children:[(0,a.jsx)(i.A,{value:"npm",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"npm install @gobob/bob-sdk\n"})})}),(0,a.jsx)(i.A,{value:"yarn",label:"Yarn",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn add @gobob/bob-sdk\n"})})}),(0,a.jsx)(i.A,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pnpm add @gobob/bob-sdk\n"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"initialize-the-api-client",children:"Initialize the API Client"}),"\n",(0,a.jsxs)(t.p,{children:["Import the ",(0,a.jsx)(t.code,{children:"GatewaySDK"})," class from ",(0,a.jsx)(t.code,{children:"@gobob/bob-sdk"})," and create an instance of it."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",metastring:'title="/src/utils/gateway.ts"',children:'import { GatewayQuoteParams, GatewaySDK } from "@gobob/bob-sdk";\n\nconst gatewaySDK = new GatewaySDK("bob"); // or "bob-sepolia"\n'})}),"\n",(0,a.jsx)(t.h3,{id:"get-available-tokens",children:"Get Available Tokens"}),"\n",(0,a.jsxs)(t.p,{children:["Returns an array of available output tokens for you to offer the user. Typically rendered as a drop-down menu. See ",(0,a.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/9c52341033af1ccbe388e64ef97a23bf6c07ccc7/sdk/src/gateway/tokens.ts#L8",children:"our SDK's source code"})," for type information."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const outputTokens = await gatewaySDK.getTokens();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"get-a-quote",children:"Get a Quote"}),"\n",(0,a.jsxs)(t.p,{children:["Call the ",(0,a.jsx)(t.code,{children:"getQuote"})," method with your ",(0,a.jsx)(t.code,{children:"quoteParams"}),". Example values shown here."]}),"\n",(0,a.jsx)(t.admonition,{title:"Updating the quote",type:"tip",children:(0,a.jsxs)(t.p,{children:["We recommend rendering ",(0,a.jsx)(t.code,{children:"quote.fee"})," and ",(0,a.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/9c52341033af1ccbe388e64ef97a23bf6c07ccc7/sdk/src/gateway/client.ts#L15",children:"its other fields"})," for a clear UX. You can update the quote dynamically, such as with the ",(0,a.jsx)(t.code,{children:"onChange"})," event."]})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'const quoteParams: GatewayQuoteParams = {\n  fromToken: "BTC",\n  fromChain: "Bitcoin",\n  fromUserAddress: "bc1qafk4yhqvj4wep57m62dgrmutldusqde8adh20d",\n  toChain: "BOB",\n  toUserAddress: "0x2D2E86236a5bC1c8a5e5499C517E17Fb88Dbc18c",\n  toToken: "tBTC", // or e.g. "SolvBTC"\n  amount: 10000000, // 0.1 BTC\n  gasRefill: 10000, // 0.0001 BTC. The amount of BTC to swap for ETH for tx fees.\n};\n\nconst quote = await gatewaySDK.getQuote(quoteParams);\n'})}),"\n",(0,a.jsx)(t.h4,{id:"get-available-staking-or-lending-contracts",children:"Get available staking or lending contracts"}),"\n",(0,a.jsxs)(t.p,{children:["The SDK will handle automatically when the ",(0,a.jsx)(t.code,{children:"toToken"})," has a fungible ERC20 token, but sometimes there is no representation. In that case we can list the available integrations and specify that in the quote."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'const strategies = await gatewaySDK.getStrategies();\nconst strategy = strategies.find(contract => contract.integration.name === "pell-wbtc")!;\nconst quoteParamsStaking: GatewayQuoteParams = {\n  ...quoteParams,\n  toChain: strategy.chain.chainId,\n  toToken: strategy.inputToken.symbol, // "wbtc"\n  strategyAddress: strategy.address,\n};\n'})}),"\n",(0,a.jsx)(t.h3,{id:"start-the-order",children:"Start the Order"}),"\n",(0,a.jsxs)(t.p,{children:["This locks in the quote, placing a hold on the LP's funds. Pass the same ",(0,a.jsx)(t.code,{children:"quoteParams"})," as before and the ",(0,a.jsx)(t.code,{children:"quote"})," returned from the previous step."]}),"\n",(0,a.jsxs)(t.p,{children:["Returns a ",(0,a.jsx)(t.code,{children:"uuid"})," for the order and ",(0,a.jsx)(t.code,{children:"psbtBase64"}),", a partially-signed Bitcoin transaction (PSBT) the user must sign."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const { uuid, psbtBase64 } = await gatewaySDK.startOrder(quote, quoteParams);\n"})}),"\n",(0,a.jsx)(t.h3,{id:"sign-the-bitcoin-transaction",children:"Sign the Bitcoin Transaction"}),"\n",(0,a.jsxs)(t.p,{children:["Create a Bitcoin transaction that sends the quoted ",(0,a.jsx)(t.code,{children:"amount"})," of BTC to the LP's ",(0,a.jsx)(t.code,{children:"bitcoinAddress"}),". This also publishes a hash of the order's parameters in the ",(0,a.jsx)(t.code,{children:"OP_RETURN"})," of the transaction so the Gateway can trustlessly verify the order on BOB."]}),"\n",(0,a.jsx)(t.admonition,{title:"Connecting to Bitcoin wallets",type:"tip",children:(0,a.jsxs)(t.p,{children:["We recommend using our ",(0,a.jsx)(t.a,{href:"/docs/build/bob-sdk/sats-wagmi",children:"sats-wagmi"})," package to interact with your user's Bitcoin wallet."]})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'import { base64 } from "@scure/base";\nimport { Transaction } from "@scure/btc-signer";\n\n// SIGN THIS!\nconst tx = Transaction.fromPSBT(base64.decode(psbtBase64!));\n'})}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsxs)(i.A,{value:"sats-wagmi",label:"sats-wagmi",children:[(0,a.jsx)(t.p,{children:"Quickstart:"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"# Install foundry\ncurl -L https://foundry.paradigm.xyz | bash\n# Init a new project\nforge init hello_bob\ncd hello_bob\n# Build the project\nforge build\n\n# Start a local chain\nanvil\n"})}),(0,a.jsxs)(t.p,{children:["Check the docs for more information: ",(0,a.jsx)(t.a,{href:"https://book.getfoundry.sh/getting-started/installation",children:"Foundry"}),"."]})]}),(0,a.jsxs)(i.A,{value:"hardhat",label:"Hardhat (based on TypeScript)",children:[(0,a.jsx)(t.p,{children:"Quickstart:"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"# Install hardhat\nyarn add --dev hardhat\n# Init a new project\nnpx hardhat init\n"})}),(0,a.jsxs)(t.p,{children:["Check the docs for more information: ",(0,a.jsx)(t.a,{href:"https://hardhat.org/getting-started/",children:"Hardhat"}),"."]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"finalize-the-order",children:"Finalize the Order"}),"\n",(0,a.jsx)(t.p,{children:"Submit the Bitcoin transaction as proof of transfer. This completes the process by transferring wrapped Bitcoin and ETH to the user's EVM address on BOB."}),"\n",(0,a.jsx)(t.p,{children:"Gateway can broadcast the Bitcoin transaction to the mempool; you can pass the transaction to the SDK without broadcasting from the user's wallet."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"// NOTE: Gateway broadcasts the transaction\nawait gatewaySDK.finalizeOrder(uuid, tx.hex);\n"})}),"\n",(0,a.jsx)(t.h3,{id:"monitor-the-users-orders",children:"Monitor the User's Orders"}),"\n",(0,a.jsx)(t.p,{children:"Get an array of pending and completed orders for a specific EVM address. Typically rendered in a table."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const orders = await gatewaySDK.getOrders(userAddress);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(t.p,{children:"BOB Gateway enables staking, swapping, lending, and bridging Bitcoin with a single transaction. The BOB SDK makes it possible for you to bring Gateway and Bitcoin LSTs directly to your users."}),"\n",(0,a.jsxs)(t.p,{children:["See the ",(0,a.jsx)(t.a,{href:"#code-references",children:"Code References"})," below for a deeper look at the SDK and an example implementation file."]}),"\n",(0,a.jsxs)(t.p,{children:["You're always welcome to ",(0,a.jsx)(t.a,{href:"/docs/learn/introduction/contribution",children:"reach out to us"})," with questions, feedback, or ideas. We look forward to seeing what you Build on Bitcoin!"]}),"\n",(0,a.jsx)(t.h2,{id:"security-and-trust-assumptions",children:"Security and Trust Assumptions"}),"\n",(0,a.jsxs)(t.p,{children:["The protocol requires zero trust between the market makers and users because it utilizes atomic cross-chain swaps. The verification of the Bitcoin transaction is performed cryptographically by an on-chain Bitcoin ",(0,a.jsx)(t.a,{href:"/docs/build/examples/btc-swap/",children:"Light Client"}),", making the swap trustless between both parties."]}),"\n",(0,a.jsx)(t.p,{children:"Furthermore, infrastructure run by the BOB team never has access to the market markers' tBTC, wBTC, or ETH funds stored in their smart contracts. The user interface and server manage order flow to prevent liquidity sniping and user errors (e.g. sending BTC without sufficient liquidity being available), but neither the front end or back end ever have access to users' or market makers' funds."}),"\n",(0,a.jsxs)(t.p,{children:["The code has been ",(0,a.jsx)(t.a,{href:"https://docs.gobob.xyz/docs/build/bob-sdk/gateway#security-and-trust-assumptions",children:"audited by Pashov and Common Prefix"})]}),"\n",(0,a.jsx)(t.h2,{id:"code-references",children:"Code References"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"bob/sdk/src/gateway/client.ts"}),": API client code (",(0,a.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/master/sdk/src/gateway/client.ts",children:"GitHub"}),")"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"bob/sdk/examples/gateway.ts"}),": example client-side implementation (",(0,a.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/master/sdk/examples/gateway.ts",children:"GitHub"}),")"]}),"\n"]})]})}function b(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var a=n(4164);const s={tabItem:"tabItem_Ymn6"};var r=n(4848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,i),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>v});var a=n(6540),s=n(4164),r=n(3104),i=n(6347),o=n(205),l=n(7485),c=n(1682),d=n(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function b(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const s=(0,i.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=h(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[c,u]=p({queryString:n,groupId:s}),[g,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,d.Dv)(n);return[s,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),f=(()=>{const e=c??g;return b({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!b({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,r]),tabValues:r}}var m=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function y(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),s=o[n].value;s!==a&&(c(t),i(s))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>l.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function w(e){const t=g(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,x.jsx)(y,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function v(e){const t=(0,m.A)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(6540);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);