"use strict";(self.webpackChunkBOB_docs=self.webpackChunkBOB_docs||[]).push([[5842],{8944:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=i(4848),o=i(8453);const s={sidebar_position:1,sidebar_label:"Test Bitcoin Locally with Regtest"},r="Bitcoin Testing",c={id:"build/how-to/bitcoin-testing",title:"Bitcoin Testing",description:"Starting a Local Bitcoin Development Environment",source:"@site/docs/build/how-to/bitcoin-testing.md",sourceDirName:"build/how-to",slug:"/build/how-to/bitcoin-testing",permalink:"/docs/build/how-to/bitcoin-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/bob-collective/bob/tree/master/docs/docs/build/how-to/bitcoin-testing.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Test Bitcoin Locally with Regtest"},sidebar:"buildSidebar",previous:{title:"Gas Fee Payment in wBTC using Account Abstraction (ERC-4337)",permalink:"/docs/build/bob-sdk/bridged-btc-gas-fee/account-abstraction/"},next:{title:"Inscribe and Transfer Ordinals",permalink:"/docs/build/how-to/ordinals"}},l={},d=[{value:"Starting a Local Bitcoin Development Environment",id:"starting-a-local-bitcoin-development-environment",level:2},{value:"Using Docker (Recommended)",id:"using-docker-recommended",level:3},{value:"Using Bitcoin Core",id:"using-bitcoin-core",level:3},{value:"Using Nigiri Bitcoin",id:"using-nigiri-bitcoin",level:3},{value:"Funding a Wallet",id:"funding-a-wallet",level:2},{value:"Transferring Funds",id:"transferring-funds",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"bitcoin-testing",children:"Bitcoin Testing"})}),"\n",(0,t.jsx)(n.h2,{id:"starting-a-local-bitcoin-development-environment",children:"Starting a Local Bitcoin Development Environment"}),"\n",(0,t.jsx)(n.h3,{id:"using-docker-recommended",children:"Using Docker (Recommended)"}),"\n",(0,t.jsxs)(n.p,{children:["We have a ",(0,t.jsx)(n.a,{href:"https://github.com/bob-collective/bob/blob/master/docker-compose.yml",children:(0,t.jsx)(n.code,{children:"docker-compose.yml"})})," setup script in the BOB repository."]}),"\n",(0,t.jsx)(n.p,{children:"The docker file will:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Run the Bitcoin daemon"}),"\n",(0,t.jsx)(n.li,{children:'Fund the "Alice" wallet'}),"\n",(0,t.jsx)(n.li,{children:"Mine a block every ten seconds"}),"\n",(0,t.jsxs)(n.li,{children:["Start the ",(0,t.jsx)(n.a,{href:"https://github.com/Blockstream/esplora",children:"Esplora"})," backend to index the local chain and provide a ",(0,t.jsx)(n.a,{href:"https://github.com/blockstream/esplora/blob/master/API.md",children:"REST API"})]}),"\n",(0,t.jsxs)(n.li,{children:["Start the ",(0,t.jsx)(n.a,{href:"https://github.com/ordinals/ord",children:"ord"})," ordinals indexer, block explorer, and wallet"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"using-bitcoin-core",children:"Using Bitcoin Core"}),"\n",(0,t.jsxs)(n.p,{children:['The recommended approach to start a local Bitcoin node for testing is to use "regtest" mode. If you have downloaded Bitcoin Core from ',(0,t.jsx)(n.a,{href:"https://bitcoin.org/en/download",children:"bitcoin.org"})," use the following to start a regtest node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"bitcoind -regtest -daemon\n"})}),"\n",(0,t.jsx)(n.p,{children:"To stop the node, use the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"bitcoin-cli -regtest stop\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-nigiri-bitcoin",children:"Using Nigiri Bitcoin"}),"\n",(0,t.jsxs)(n.p,{children:["For an alternative development environment check out ",(0,t.jsx)(n.a,{href:"https://github.com/vulpemventures/nigiri/",children:"Nigiri Bitcoin"})," which also packages a Liquid daemon and an Electrum server."]}),"\n",(0,t.jsx)(n.h2,{id:"funding-a-wallet",children:"Funding a Wallet"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["This step is only required if you are not using the ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," script."]})}),"\n",(0,t.jsxs)(n.p,{children:['To create and fund the "Alice" wallet, use the following ',(0,t.jsx)(n.code,{children:"bitcoin-cli"})," commands:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"bitcoin-cli -regtest createwallet Alice\nALICE_ADDRESS=$(bitcoin-cli -regtest -rpcwallet=Alice getnewaddress)\nbitcoin-cli -regtest generatetoaddress 101 ${ALICE_ADDRESS}\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Funds from the coinbase transaction need 100 confirmations to be spendable, so make sure to mine a sufficient number of blocks. The command above mines 101 blocks, which is the minimum required for the funds to be spendable."})}),"\n",(0,t.jsx)(n.h2,{id:"transferring-funds",children:"Transferring Funds"}),"\n",(0,t.jsx)(n.p,{children:'To create and send funds to the "Bob" wallet, use the following commands:'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"bitcoin-cli -regtest createwallet Bob\nBOB_ADDRESS=$(bitcoin-cli -regtest -rpcwallet=Bob getnewaddress)\nbitcoin-cli -regtest -rpcwallet=Alice -named sendtoaddress address=${BOB_ADDRESS} amount=$(bitcoin-cli -regtest -rpcwallet=Alice getbalance) subtractfeefromamount=true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To use a supported Graphical User Interface (GUI) instead, terminate the ",(0,t.jsx)(n.code,{children:"bitcoind"})," process and run ",(0,t.jsx)(n.code,{children:"bitcoin-qt"})," instead:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://bitcoin.org/img/bitcoin-core/clear-overview.png?1697494088",alt:"Bitcoin Core Wallet GUI"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);