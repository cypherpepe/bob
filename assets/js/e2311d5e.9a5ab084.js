"use strict";(self.webpackChunkBOB_docs=self.webpackChunkBOB_docs||[]).push([[1715],{4493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=n(4848),r=n(8453);const i={},c="BitcoinTx",o={id:"contracts/src/src/utils/BitcoinTx.sol/library.BitcoinTx",title:"BitcoinTx",description:"Git Source",source:"@site/docs/contracts/src/src/utils/BitcoinTx.sol/library.BitcoinTx.md",sourceDirName:"contracts/src/src/utils/BitcoinTx.sol",slug:"/contracts/src/src/utils/BitcoinTx.sol/library.BitcoinTx",permalink:"/docs/contracts/src/src/utils/BitcoinTx.sol/library.BitcoinTx",draft:!1,unlisted:!1,editUrl:"https://github.com/bob-collective/bob/tree/master/docs/docs/contracts/src/src/utils/BitcoinTx.sol/library.BitcoinTx.md",tags:[],version:"current",frontMatter:{},sidebar:"contractSidebar",previous:{title:"BobWrappedBtc",permalink:"/docs/contracts/src/src/swap/Wrapped.sol/contract.BobWrappedBtc"},next:{title:"WitnessTx",permalink:"/docs/contracts/src/src/utils/WitnessTx.sol/library.WitnessTx"}},d={},l=[{value:"Functions",id:"functions",level:2},{value:"validateProof",id:"validateproof",level:3},{value:"evaluateProofDifficulty",id:"evaluateproofdifficulty",level:3},{value:"processTxOutputs",id:"processtxoutputs",level:3},{value:"extractEvmAddressFromOutput",id:"extractevmaddressfromoutput",level:3},{value:"extractHashFromOutput",id:"extracthashfromoutput",level:3},{value:"reverseEndianness",id:"reverseendianness",level:3},{value:"ensureTxInputSpendsUtxo",id:"ensuretxinputspendsutxo",level:3},{value:"Structs",id:"structs",level:2},{value:"Info",id:"info",level:3},{value:"Proof",id:"proof",level:3},{value:"UTXO",id:"utxo",level:3},{value:"TxOutputsProcessingInfo",id:"txoutputsprocessinginfo",level:3},{value:"TxOutputsInfo",id:"txoutputsinfo",level:3}];function a(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"bitcointx",children:"BitcoinTx"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/master/src/utils/BitcoinTx.sol",children:"Git Source"})}),"\n",(0,s.jsx)(t.p,{children:"Allows to reference Bitcoin raw transaction in Solidity."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["See ",(0,s.jsx)(t.a,{href:"https://developer.bitcoin.org/reference/transactions.html#raw-transaction-format",children:"https://developer.bitcoin.org/reference/transactions.html#raw-transaction-format"})]})}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(t.h3,{id:"validateproof",children:"validateProof"}),"\n",(0,s.jsx)(t.p,{children:"Validates the SPV proof of the Bitcoin transaction.\nReverts in case the validation or proof verification fail."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function validateProof(IRelay relay, uint256 txProofDifficultyFactor, Info memory txInfo, Proof memory proof)\n    internal\n    view\n    returns (bytes32 txHash);\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"relay"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"IRelay"})}),(0,s.jsx)(t.td,{children:"Bitcoin relay providing the current Bitcoin network difficulty."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"txProofDifficultyFactor"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"uint256"})}),(0,s.jsx)(t.td,{children:"The number of confirmations required on the Bitcoin chain."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"txInfo"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Info"})}),(0,s.jsx)(t.td,{children:"Bitcoin transaction data."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"proof"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Proof"})}),(0,s.jsx)(t.td,{children:"Bitcoin proof data."})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"txHash"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bytes32"})}),(0,s.jsx)(t.td,{children:"Proven 32-byte transaction hash."})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"evaluateproofdifficulty",children:"evaluateProofDifficulty"}),"\n",(0,s.jsx)(t.p,{children:"Evaluates the given Bitcoin proof difficulty against the actual\nBitcoin chain difficulty provided by the relay oracle.\nReverts in case the evaluation fails."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function evaluateProofDifficulty(IRelay relay, uint256 txProofDifficultyFactor, bytes memory bitcoinHeaders)\n    internal\n    view;\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"relay"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"IRelay"})}),(0,s.jsx)(t.td,{children:"Bitcoin relay providing the current Bitcoin network difficulty."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"txProofDifficultyFactor"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"uint256"})}),(0,s.jsx)(t.td,{children:"The number of confirmations required on the Bitcoin chain."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bitcoinHeaders"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bytes"})}),(0,s.jsx)(t.td,{children:"Bitcoin headers chain being part of the SPV proof. Used to extract the observed proof difficulty."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"processtxoutputs",children:"processTxOutputs"}),"\n",(0,s.jsx)(t.p,{children:"Processes all outputs from the transaction."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function processTxOutputs(bytes memory txOutputVector, bytes32 scriptPubKeyHash)\n    internal\n    pure\n    returns (TxOutputsInfo memory resultInfo);\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"txOutputVector"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bytes"})}),(0,s.jsxs)(t.td,{children:["Bitcoin transaction output vector. This function assumes vector's structure is valid so it must be validated using e.g. ",(0,s.jsx)(t.code,{children:"BTCUtils.validateVout"})," function before it is passed here."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"scriptPubKeyHash"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"bytes32"})}),(0,s.jsx)(t.td,{children:"Expected Bitcoin scriptPubKey keccak256 hash."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"extractevmaddressfromoutput",children:"extractEvmAddressFromOutput"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function extractEvmAddressFromOutput(bytes memory _output, uint256 _at) internal pure returns (address evmAddress);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"extracthashfromoutput",children:"extractHashFromOutput"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function extractHashFromOutput(bytes memory _output, uint256 _at) internal pure returns (bytes32 outputHash);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"reverseendianness",children:"reverseEndianness"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function reverseEndianness(bytes32 b) internal pure returns (bytes32 txHash);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"ensuretxinputspendsutxo",children:"ensureTxInputSpendsUtxo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"function ensureTxInputSpendsUtxo(bytes memory _vin, BitcoinTx.UTXO memory utxo) internal pure;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"structs",children:"Structs"}),"\n",(0,s.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,s.jsx)(t.p,{children:"Represents Bitcoin transaction data."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"struct Info {\n    bytes4 version;\n    bytes inputVector;\n    bytes outputVector;\n    bytes4 locktime;\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"proof",children:"Proof"}),"\n",(0,s.jsx)(t.p,{children:"Represents data needed to perform a Bitcoin SPV proof."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"struct Proof {\n    bytes merkleProof;\n    uint256 txIndexInBlock;\n    bytes bitcoinHeaders;\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"utxo",children:"UTXO"}),"\n",(0,s.jsx)(t.p,{children:"Represents info about an unspent transaction output."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"struct UTXO {\n    bytes32 txHash;\n    uint32 txOutputIndex;\n    uint64 txOutputValue;\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"txoutputsprocessinginfo",children:"TxOutputsProcessingInfo"}),"\n",(0,s.jsx)(t.p,{children:"Represents temporary information needed during the processing of\nthe Bitcoin transaction outputs. This structure is an internal one\nand should not be exported outside of the transaction processing code."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:'Allows to mitigate "stack too deep" errors on EVM.'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"struct TxOutputsProcessingInfo {\n    uint256 outputStartingIndex;\n    uint256 outputsCount;\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"txoutputsinfo",children:"TxOutputsInfo"}),"\n",(0,s.jsx)(t.p,{children:"Represents an outcome of the Bitcoin transaction\noutputs processing."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-solidity",children:"struct TxOutputsInfo {\n    uint64 value;\n    address evmAddress;\n    bytes32 hash;\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);