"use strict";(self.webpackChunkBOB_docs=self.webpackChunkBOB_docs||[]).push([[533],{6892:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var r=s(4848),c=s(8453);const n={},i="TestLightRelay",o={id:"contracts/src/src/relay/TestLightRelay.sol/contract.TestLightRelay",title:"TestLightRelay",description:"Git Source",source:"@site/docs/contracts/src/src/relay/TestLightRelay.sol/contract.TestLightRelay.md",sourceDirName:"contracts/src/src/relay/TestLightRelay.sol",slug:"/contracts/src/src/relay/TestLightRelay.sol/contract.TestLightRelay",permalink:"/docs/contracts/src/src/relay/TestLightRelay.sol/contract.TestLightRelay",draft:!1,unlisted:!1,editUrl:"https://github.com/bob-collective/bob/tree/master/docs/docs/contracts/src/src/relay/TestLightRelay.sol/contract.TestLightRelay.md",tags:[],version:"current",frontMatter:{},sidebar:"contractSidebar",previous:{title:"Epoch",permalink:"/docs/contracts/src/src/relay/LightRelay.sol/struct.Epoch"},next:{title:"Bridge",permalink:"/docs/contracts/src/src/swap/Bridge.sol/contract.Bridge"}},a={},l=[{value:"Functions",id:"functions",level:2},{value:"setDifficultyFromHeaders",id:"setdifficultyfromheaders",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"testlightrelay",children:"TestLightRelay"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/bob-collective/bob/blob/master/src/relay/TestLightRelay.sol",children:"Git Source"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Inherits:"}),"\n",(0,r.jsx)(t.a,{href:"/docs/contracts/src/src/relay/LightRelay.sol/contract.LightRelay",children:"LightRelay"})]}),"\n",(0,r.jsxs)(t.p,{children:["TestLightRelay is a stub version of LightRelay intended to be\nused on for testing network. It allows to set the relay's\ndifficulty based on arbitrary Bitcoin headers thus effectively\nbypass the validation of difficulties of Bitcoin testnet blocks.\nSince difficulty in Bitcoin testnet often falls to ",(0,r.jsx)(t.code,{children:"1"})," it would not\nbe possible to validate blocks with the real LightRelay."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Notice that TestLightRelay is derived from LightRelay so that the two\ncontracts have the same API and correct bindings can be generated."})}),"\n",(0,r.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(t.h3,{id:"setdifficultyfromheaders",children:"setDifficultyFromHeaders"}),"\n",(0,r.jsx)(t.p,{children:"Sets the current and previous difficulty based on the difficulty\ninferred from the provided Bitcoin headers."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-solidity",children:"function setDifficultyFromHeaders(bytes memory bitcoinHeaders) external;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var r=s(6540);const c={},n=r.createContext(c);function i(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);